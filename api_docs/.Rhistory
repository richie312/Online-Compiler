url = "https://{}/api/v4/problems/:{}/testcases?access_token={}?".format(problem_auth['endpoint'],27874,problem_auth['token'])
python data_insertion(task_name/number, parent_unique_id) from the command line
python data_insertion(task_name/number, parent_unique_id)
parent_unique_id = '.....'
task = ['SSB_300','SSB_290',.....]
ConnectionError: HTTPConnectionPool(host='b47c8916.problems.sphere-engine.com', port=80): Max retries exceeded with url: /api/v4/test?access_token=4c1e602f25ea827d81f3f84dbdbd9527 (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000029B81306198>: Failed to establish a new connection: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond',))
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Default Value",
"Description", "Mandatory Parameters")
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
#datatable(get_testcase_df)
kable(datatable(get_testcase_df)) %>%
kable_styling("striped", full_width = F) %>%
column_spec(5:7, bold = T) %>%
row_spec(3:5, bold = T, color = "white", background = "#D7261E")
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
#datatable(get_testcase_df)
kable(get_testcase_df) %>%
kable_styling("striped", full_width = F) %>%
column_spec(5:7, bold = T) %>%
row_spec(3:5, bold = T, color = "white", background = "#D7261E")
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
#datatable(get_testcase_df)
kable(get_testcase_df) %>%
kable_styling("striped", full_width = F) %>%
column_spec(1:4, bold = T) %>%
row_spec(get_testcase_df$`Mandatory Parameters` == TRUE, bold = T, color = "white", background = "#D7261E")
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
getcwd()
getwd()
setwd('D:\sphere_Engine\api_docs')
setwd(r'D:\sphere_Engine\api_docs')
setwd('D:/sphere_Engine/api_docs')
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
get_testcase_df$`Mandatory Parameters` == TRUE
get_testcase_df[get_testcase_df$`Mandatory Parameters` == TRUE]
a = get_testcase_df[get_testcase_df$`Mandatory Parameters` == TRUE]
a
a.index
index(a)
as.numeric(rownames(a))
as.numeric(rownames(a))[0]
as.numeric(rownames(a))[0]
as.numeric(rownames(a))[1]
as.numeric(rownames(a))[1]
as.numeric(rownames(a))[1:]
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
#datatable(get_testcase_df)
a = get_testcase_df[get_testcase_df$`Mandatory Parameters` == TRUE]
kable(get_testcase_df) %>%
kable_styling("striped", full_width = F) %>%
column_spec(1:4, bold = T) %>%
row_spec(as.numeric(rownames(a)), bold = T, color = "white", background = "#D7261E")
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
#datatable(get_testcase_df)
a = get_testcase_df[get_testcase_df$`Mandatory Parameters` == TRUE]
kable(get_testcase_df) %>%
kable_styling("striped", full_width = F) %>%
column_spec(1:4, bold = T) %>%
row_spec(as.numeric(rownames(a)), bold = T, color = "white", background = "#B3E4DF")
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
create_prob_df
colnames(create_prob_df) = c("ParameterName","Type","Default Value",
"Description", "Mandatory Parameters")
a = create_prob_df[create_prob_df$`Mandatory Parameters` == TRUE]
create_prob_df$`Mandatory Parameters`
create_prob_df$`Mandatory Parameters` == TRUE
source('~/.active-rstudio-document', echo=TRUE)
a = get_testcase_df[get_testcase_df$`Mandatory Parameters` == TRUE]
b = create_prob_df[create_prob_df$`Mandatory Parameters` == TRUE]
create_prob_df
get_testcase_df[get_testcase_df$`Mandatory Parameters` == TRUE]
b = create_prob_df[create_prob_df$`Mandatory Parameters` == TRUE]
b
create_prob_df$`Mandatory Parameters` == TRUE
create_prob_df[create_prob_df$`Mandatory Parameters` == TRUE]
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type","Default Value",
"Description", "Mandatory Parameters")
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type","Default Value",
"Description", "Mandatory Parameters")
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
b = create_prob_df[create_prob_df$`Mandatory Parameters` == TRUE]
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
colnames(get_testcase_df)
a = get_testcase_df[get_testcase_df$`Mandatory Parameters` == TRUE]
a
as.numeric(rownames(a))[1]
as.numeric(rownames(a))
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
b = create_prob_df[create_prob_df$`Mandatory Parameters` == TRUE]
update_prob_df = read.csv('update_prob.csv',stringsAsFactors = FALSE)
colnames(update_prob_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
c = update_prob_df[update_prob_df$`Mandatory Parameters` == TRUE]
c
get_prob_df = read.csv('get_problems.csv',stringsAsFactors = FALSE)
colnames(get_prob_df) = c("ParameterName","Type","Default Value",
"Description", "Mandatory Parameters")
get_prob_df
d = get_prob_df[get_prob_df$`Mandatory Parameters` == TRUE]
d
d = get_prob_df[get_prob_df$`Mandatory Parameters` == TRUE]
as.numeric(rownames(d))
library(DT)
library(kableExtra)
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
a = create_prob_df[create_prob_df$`Mandatory Parameters` == TRUE]
library(DT)
library(kableExtra)
update_testcase_df = read.csv('update_testcase.csv',stringsAsFactors = FALSE)
colnames(update_testcase_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
datatable(create_testcase_df)
library(DT)
library(kableExtra)
update_testcase_df = read.csv('update_testcase.csv',stringsAsFactors = FALSE)
colnames(update_testcase_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
#datatable(create_testcase_df)
library(DT)
library(kableExtra)
update_testcase_df = read.csv('update_testcase.csv',stringsAsFactors = FALSE)
colnames(update_testcase_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
#datatable(create_testcase_df)
library(DT)
library(kableExtra)
update_testcase_df = read.csv('update_testcase.csv',stringsAsFactors = FALSE)
colnames(update_testcase_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
datatable(create_testcase_df)
datatable(update_testcase_df)
library(DT)
library(kableExtra)
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(create_prob_df) %>%formatStyle(
'V4',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('gray', 'yellow'))
)
library(DT)
library(kableExtra)
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(create_prob_df) %>%formatStyle(
'Mandatory Parameters',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('gray', 'yellow'))
)
library(DT)
library(kableExtra)
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(create_prob_df) %>%formatStyle(
'Mandatory Parameters',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(create_prob_df) %>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
create_prob_df = read.csv('create_prob.csv',stringsAsFactors = FALSE)
colnames(create_prob_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(create_prob_df) %>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
datatable(get_testcase_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
datatable(get_testcase_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(true, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
datatable(get_testcase_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c('true', "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
datatable(get_testcase_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c("true", "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
get_rank_df = read.csv('get_rank.csv',stringsAsFactors = FALSE)
colnames(get_rank_df) = c("ParameterName","Type","Default Value",
"Description", "Mandatory Parameters")
datatable(get_rank_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
compiler_output_df = read.csv('get_compiler_output.csv',stringsAsFactors = FALSE)
colnames(compiler_output_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(compiler_output_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
get_rank_df = read.csv('get_rank.csv',stringsAsFactors = FALSE)
colnames(get_rank_df) = c("ParameterName","Type","Default Value",
"Description", "Mandatory Parameters")
datatable(get_rank_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
library(DT)
library(kableExtra)
get_testcase_df = read.csv('testcase.csv',stringsAsFactors = FALSE)
colnames(get_testcase_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
datatable(get_testcase_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c("true", "Optional"), c('#5BE15B', 'yellow'))
)
update_prob_df = read.csv('update_prob.csv',stringsAsFactors = FALSE)
colnames(update_prob_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
datatable(update_prob_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
update_prob_df = read.csv('update_prob.csv',stringsAsFactors = FALSE)
colnames(update_prob_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
datatable(update_prob_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
update_prob_df = read.csv('update_prob.csv',stringsAsFactors = FALSE)
colnames(update_prob_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
datatable(update_prob_df)%>%formatStyle(
'Mandatory Parameter', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', 'yellow'))
)
update_prob_df = read.csv('update_prob.csv',stringsAsFactors = FALSE)
colnames(update_prob_df) = c("Parameter Name","Type","Description","Mandatory Parameter")
datatable(update_prob_df)%>%formatStyle(
'Mandatory Parameter', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', ''))
)
library(DT)
library(kableExtra)
compiler_output_df = read.csv('get_compiler_output.csv',stringsAsFactors = FALSE)
colnames(compiler_output_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(compiler_output_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', ''))
)
library(DT)
library(kableExtra)
compiler_output_df = read.csv('get_compiler_output.csv',stringsAsFactors = FALSE)
colnames(compiler_output_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(compiler_output_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c("true", "Optional"), c('#5BE15B', ''))
)
library(DT)
library(kableExtra)
compiler_output_df = read.csv('get_compiler_output.csv',stringsAsFactors = FALSE)
colnames(compiler_output_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(compiler_output_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c("TRUE", "Optional"), c('#5BE15B', ''))
)
library(DT)
library(kableExtra)
compiler_output_df = read.csv('get_compiler_output.csv',stringsAsFactors = FALSE)
colnames(compiler_output_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(compiler_output_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', ''))
)
compiler_output_df =read.csv('get_compiler_output.csv',stringsAsFactors = FALSE)
library(DT)
library(kableExtra)
compiler_output_df =read.csv('get_compiler_output.csv',stringsAsFactors = FALSE)
colnames(compiler_output_df) = c("ParameterName","Type",
"Description", "Mandatory Parameters")
datatable(compiler_output_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c(TRUE, "Optional"), c('#5BE15B', ''))
)
library(DT)
library(kableExtra)
update_checkfilerequirement_df = read.csv('checkfile_requirement.csv',stringsAsFactors = FALSE)
colnames(update_checkfilerequirement_df) = c("ParameterName","Type","Description", "Mandatory Parameters")
datatable(update_checkfilerequirement_df)%>%formatStyle(
'Mandatory Parameters', target = 'row',
backgroundColor = styleEqual(c("true", "Optional"), c('#5BE15B', 'yellow'))
)
